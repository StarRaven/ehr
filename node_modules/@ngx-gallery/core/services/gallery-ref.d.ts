import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import { GalleryState, GalleryConfig, GalleryItem } from '../models';
export declare class GalleryRef {
    config: GalleryConfig;
    state: GalleryState;
    state$: BehaviorSubject<GalleryState>;
    config$: BehaviorSubject<GalleryConfig>;
    constructor(config?: GalleryConfig, state?: GalleryState);
    /**
     * Set gallery config
     * @param config
     */
    setConfig(config: GalleryConfig): void;
    /**
     * Set gallery state
     * @param state
     */
    setState(state: GalleryState): void;
    /** Add gallery item
     * @param item - Gallery item object
     * @param active - Set the new item as current slide
     */
    add(item: GalleryItem, active?: boolean): void;
    /** Remove gallery item
     * @param i - Item index
     */
    remove(i: number): void;
    /**
     * Load items and reset the state
     * @param items - Gallery images data
     */
    load(items: GalleryItem[]): void;
    /**
     * Set active item
     * @param i - Active Index
     * @param action - Action type
     */
    set(i: number): void;
    /**
     * Next item
     */
    next(): void;
    /**
     * Prev item
     */
    prev(): void;
    /**
     * Reset gallery to initial state
     */
    reset(): void;
    /**
     * Destroy GalleryRef (for internal use only)
     */
    destroy(): void;
    /** Gallery Events */
    /**
     * Stream that emits when gallery is initialized/reset
     */
    initialized(): Observable<GalleryState>;
    /**
     * Stream that emits when items is changed (items loaded, item added, item removed)
     */
    itemsChanged(): Observable<GalleryState>;
    /**
     * Stream that emits when current item is changed
     */
    indexChanged(): Observable<GalleryState>;
}
