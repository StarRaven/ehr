{
  "version": 3,
  "file": "ngx-gallery-lightbox.js",
  "sources": [
    "ng://@ngx-gallery/lightbox/out/lightbox.module.ts",
    "ng://@ngx-gallery/lightbox/out/lightbox.service.ts",
    "ng://@ngx-gallery/lightbox/out/lightbox.default.ts",
    "ng://@ngx-gallery/lightbox/out/lightbox.token.ts",
    "ng://@ngx-gallery/lightbox/out/lightbox.component.ts"
  ],
  "sourcesContent": [
    "import { InjectionToken, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\r\nimport { Gallery, GalleryModule } from '@ngx-gallery/core';\r\n\r\nimport { LightboxConfig } from './lightbox.model';\r\nimport { LIGHTBOX_CONFIG } from './lightbox.token';\r\nimport { Lightbox } from './lightbox.service';\r\nimport { LightboxComponent } from './lightbox.component';\r\n\r\nexport function lightboxFactory(config: LightboxConfig, gallery: Gallery, overlay: Overlay) {\r\n  return new Lightbox(config, gallery, overlay);\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    GalleryModule\r\n  ],\r\n  declarations: [\r\n    LightboxComponent\r\n  ],\r\n  entryComponents: [\r\n    LightboxComponent\r\n  ]\r\n})\r\nexport class LightboxModule {\r\n  static forRoot(config?: LightboxConfig) {\r\n\r\n    return {\r\n      ngModule: LightboxModule,\r\n      providers: [\r\n        {\r\n          provide: LIGHTBOX_CONFIG,\r\n          useValue: config\r\n        },\r\n        {\r\n          provide: Lightbox,\r\n          useFactory: lightboxFactory,\r\n          deps: [LIGHTBOX_CONFIG, Gallery, Overlay]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n",
    "import { ComponentRef, Inject, Injectable } from '@angular/core';\r\nimport { Gallery } from '@ngx-gallery/core';\r\nimport { LIGHTBOX_CONFIG } from './lightbox.token';\r\nimport { LightboxConfig } from './lightbox.model';\r\nimport { defaultConfig } from './lightbox.default';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { OverlayRef } from '@angular/cdk/overlay';\r\nimport { OverlayConfig } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { LEFT_ARROW } from '@angular/cdk/keycodes';\r\nimport { RIGHT_ARROW } from '@angular/cdk/keycodes';\r\nimport { ESCAPE } from '@angular/cdk/keycodes';\r\nimport { LightboxComponent } from './lightbox.component';\r\n\r\n@Injectable()\r\nexport class Lightbox {\r\n\r\n  /** Gallery overlay ref */\r\n  private _overlayRef: OverlayRef;\r\n\r\n  /** Global config */\r\n  private config: LightboxConfig;\r\n\r\n  constructor(@Inject(LIGHTBOX_CONFIG) config: LightboxConfig, private _gallery: Gallery, private _overlay: Overlay) {\r\n    this.config = {...defaultConfig, ...config};\r\n  }\r\n\r\n  /**\r\n   * Set Lightbox Config\r\n   * @param config - LightboxConfig\r\n   */\r\n  setConfig(config: LightboxConfig) {\r\n    this.config = {...this.config, ...config};\r\n  }\r\n\r\n  /**\r\n   * Open Lightbox Overlay\r\n   * @param i - Current Index\r\n   * @param id - Gallery ID\r\n   * @param config - Lightbox Config\r\n   */\r\n  open(i = 0, id = 'lightbox', config?: LightboxConfig) {\r\n\r\n    const _config = config ? { ...this.config, ...config } : this.config;\r\n\r\n    const overlayConfig: OverlayConfig = {\r\n      backdropClass: _config.backdropClass,\r\n      panelClass: _config.panelClass,\r\n      hasBackdrop: _config.hasBackdrop,\r\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\r\n      scrollStrategy: this._overlay.scrollStrategies.block()\r\n    };\r\n\r\n    const galleryRef = this._gallery.ref(id);\r\n    galleryRef.set(i);\r\n\r\n    this._overlayRef = this._overlay.create(overlayConfig);\r\n\r\n    /** Attach gallery to the overlay */\r\n    const galleryPortal = new ComponentPortal(LightboxComponent);\r\n    const compRef: ComponentRef<LightboxComponent> = this._overlayRef.attach(galleryPortal);\r\n\r\n    compRef.instance.id = id;\r\n    compRef.instance.close = () => this.close();\r\n\r\n    if (_config.hasBackdrop) {\r\n      this._overlayRef.backdropClick().subscribe(() => this.close());\r\n    }\r\n\r\n    if (_config.keyboardShortcuts) {\r\n      this._overlayRef.keydownEvents().subscribe((event) => {\r\n        switch (event.keyCode) {\r\n          case LEFT_ARROW:\r\n            galleryRef.prev(id);\r\n            break;\r\n          case RIGHT_ARROW:\r\n            galleryRef.next(id);\r\n            break;\r\n          case ESCAPE:\r\n            this.close();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close Lightbox Overlay\r\n   */\r\n  close() {\r\n    if (this._overlayRef.hasAttached()) {\r\n      this._overlayRef.dispose();\r\n    }\r\n  }\r\n}\r\n",
    "import { LightboxConfig } from './lightbox.model';\r\n\r\nexport const defaultConfig: LightboxConfig = {\r\n  backdropClass: 'g-backdrop',\r\n  panelClass: 'g-overlay',\r\n  hasBackdrop: true,\r\n  keyboardShortcuts: true\r\n};\r\n",
    "import { InjectionToken } from '@angular/core';\r\nimport { LightboxConfig } from './lightbox.model';\r\n\r\nexport const LIGHTBOX_CONFIG = new InjectionToken<LightboxConfig>('lightboxConfig');\r\n",
    "import { Component, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'lightbox',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  animations: [\r\n    trigger('slideGalleryIn', [\r\n      state('void', style({transform: 'translateY(25%) scale(0.9)', opacity: 0})),\r\n      state('enter', style({transform: 'translateY(0%) scale(1)', opacity: 1})),\r\n      state('exit', style({transform: 'translateY(25%)', opacity: 0})),\r\n      transition('* => *', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\r\n    ])\r\n  ],\r\n  template: `\r\n    <gallery [@slideGalleryIn] [id]=\"id\" [destroyRef]=\"false\">\r\n      <div class=\"g-btn-close\" (tapClick)=\"close()\"></div>\r\n    </gallery>\r\n  `\r\n})\r\nexport class LightboxComponent implements OnDestroy {\r\n\r\n  id: string;\r\n  close: any;\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n  }\r\n}\r\n"
  ],
  "names": [],
  "mappings": ";;;;;;;;AIAA;IAAA;;IA0BE,uCAAW,GAAX;QACE,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;;;;IAzBH,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,UAAU;gBACpB,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,mBAAmB,EAAE,KAAK;gBAC1B,UAAU,EAAE;oBACV,OAAO,CAAC,gBAAgB,EAAE;wBACxB,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAC,SAAS,EAAE,4BAA4B,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;wBAC3E,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAC,SAAS,EAAE,yBAAyB,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;wBACzE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAC,SAAS,EAAE,iBAAiB,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;wBAChE,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,wCAAwC,CAAC,CAAC;qBACxE,CAAC;iBACH;gBACD,QAAQ,EAAE,0JAIT;aACF,EAAD,EAAA;;;ADpBA,IAGa,eAAe,GAAG,IAAI,cAAc,CAAiB,gBAAgB,CAAC,CAHnF;ADEA,IAAa,aAAa,GAAmB;IAC3C,aAAa,EAAE,YAAY;IAC3B,UAAU,EAAE,WAAW;IACvB,WAAW,EAAE,IAAI;IACjB,iBAAiB,EAAE,IAAI;CACxB,CAAD;ADPA;IAuBE,kBAAqC,MAAvC,EAAuE,QAAiB,EAAU,QAAiB;QAA5C,IAAvE,CAAA,QAA+E,GAAR,QAAQ,CAAS;QAAU,IAAlG,CAAA,QAA0G,GAAR,QAAQ,CAAS;QAC/G,IAAI,CAAC,MAAM,GAAf,MAAA,CAAA,MAAA,CAAA,EAAA,EAAsB,aAAa,EAAK,MAAM,CAAC,CAAC;KAC7C;IAMD,4BAAS,GAAT,UAAU,MAAsB;QAC9B,IAAI,CAAC,MAAM,GAAf,MAAA,CAAA,MAAA,CAAA,EAAA,EAAsB,IAAI,CAAC,MAAM,EAAK,MAAM,CAAC,CAAC;KAC3C;IAQD,uBAAI,GAAJ,UAAK,CAAK,EAAE,EAAe,EAAE,MAAuB;QAApD,iBA0CC;QA1CI,kBAAA,EAAA,KAAK;QAAE,mBAAA,EAAA,eAAe;QAEzB,IAAM,OAAO,GAAG,MAAM,GAA1B,MAAA,CAAA,MAAA,CAAA,EAAA,EAAkC,IAAI,CAAC,MAAM,EAAK,MAAM,CAAxD,GAA6D,IAAI,CAAC,MAAM,CAAC;QAErE,IAAM,aAAa,GAAkB;YACnC,aAAa,EAAE,OAAO,CAAC,aAAa;YACpC,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,WAAW,EAAE,OAAO,CAAC,WAAW;YAChC,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC,kBAAkB,EAAE,CAAC,gBAAgB,EAAE;YAC3F,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE;SACvD,CAAC;QAEF,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACzC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAElB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAGvD,IAAM,aAAa,GAAG,IAAI,eAAe,CAAC,iBAAiB,CAAC,CAAC;QAC7D,IAAM,OAAO,GAAoC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAExF,OAAO,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;QACzB,OAAO,CAAC,QAAQ,CAAC,KAAK,GAAG,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,GAAA,CAAC;QAE5C,IAAI,OAAO,CAAC,WAAW,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,GAAA,CAAC,CAAC;SAChE;QAED,IAAI,OAAO,CAAC,iBAAiB,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,KAAK;gBAC/C,QAAQ,KAAK,CAAC,OAAO;oBACnB,KAAK,UAAU;wBACb,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBACpB,MAAM;oBACR,KAAK,WAAW;wBACd,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBACpB,MAAM;oBACR,KAAK,MAAM;wBACT,KAAI,CAAC,KAAK,EAAE,CAAC;iBAChB;aACF,CAAC,CAAC;SACJ;KACF;IAKD,wBAAK,GAAL;QACE,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE;YAClC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;SAC5B;KACF;;;;IA9EH,EAAA,IAAA,EAAC,UAAU,EAAX;;;IASA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,MAAM,EAArB,IAAA,EAAA,CAAsB,eAAe,EAArC,EAAA,EAAA,EAAA;IAtBA,EAAA,IAAA,EAAS,OAAO,GAAhB;IAIA,EAAA,IAAA,EAAS,OAAO,GAAhB;;ADKA,yBAAgC,MAAsB,EAAE,OAAgB,EAAE,OAAgB;IACxF,OAAO,IAAI,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;CAC/C;AAeD;IAAA;;IACS,sBAAO,GAAd,UAAe,MAAuB;QAEpC,OAAO;YACL,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,eAAe;oBACxB,QAAQ,EAAE,MAAM;iBACjB;gBACD;oBACE,OAAO,EAAE,QAAQ;oBACjB,UAAU,EAAE,eAAe;oBAC3B,IAAI,EAAE,CAAC,eAAe,EAAE,OAAO,EAAE,OAAO,CAAC;iBAC1C;aACF;SACF,CAAC;KACH;;;;IA9BH,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,aAAa;oBACb,aAAa;iBACd;gBACD,YAAY,EAAE;oBACZ,iBAAiB;iBAClB;gBACD,eAAe,EAAE;oBACf,iBAAiB;iBAClB;aACF,EAAD,EAAA;;;;;;"
}
